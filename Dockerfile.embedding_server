FROM nvidia/cuda:12.5.1-cudnn-runtime-ubuntu22.04
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && \
    apt-get install -y \
    gfortran \
    less \
    apt-transport-https \
    git \
    ssh \
    tar \
    wget \
    curl \
    sudo \
    && rm -rf /var/lib/apt/lists/*

# Install gosu for user switching
RUN wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/1.17/gosu-$(dpkg --print-architecture)" && \
    chmod +x /usr/local/bin/gosu

# Install uv globally to /usr/local/bin
RUN wget -qO- https://astral.sh/uv/install.sh | sh && \
    mv /root/.local/bin/uv /usr/local/bin/uv && \
    chmod +x /usr/local/bin/uv

# Use ARG to allow build-time variables
ARG HOST_UID=1000
ARG HOST_GID=1000
ARG HF_HOME

# Create user and group first
RUN groupadd -g $HOST_GID hostgroup || true
RUN useradd -u $HOST_UID -g $HOST_GID -m -s /bin/bash hostuser || true
RUN usermod -aG sudo hostuser || true
RUN echo "hostuser ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Setup Python venv as the host user
RUN mkdir /opt/venv
RUN chown -R $HOST_UID:$HOST_GID /opt/venv
RUN gosu $HOST_UID:$HOST_GID uv python install 3.12
RUN gosu $HOST_UID:$HOST_GID uv venv /opt/venv --python 3.12

# Create python symlink if it doesn't exist
RUN if [ ! -f /opt/venv/bin/python ]; then ln -s /opt/venv/bin/python3 /opt/venv/bin/python; fi

# Ensure the virtual environment's bin directory is in the PATH
ENV PATH=/opt/venv/bin:$PATH

# Only copy needed elements into the container
COPY bertrend/services/embedding_server /bertrend/services/embedding_server/
COPY bertrend/services/key.pem /bertrend/services/
COPY bertrend/services/cert.pem /bertrend/services/

# Set workdir
WORKDIR /bertrend/services/embedding_server/

# Install minimum requirements as host user
RUN gosu $HOST_UID:$HOST_GID uv pip install -r requirements.txt

# Ensure proper ownership and permissions
RUN chown -R $HOST_UID:$HOST_GID  /bertrend/services/embedding_server/

# Create the entrypoint.sh script
RUN printf '#!/bin/bash\n\
# Activate virtual environment\n\
source /opt/venv/bin/activate\n\
\n\
if [ -n "$HOST_UID" ] && [ -n "$HOST_GID" ]; then\n\
    exec gosu "$HOST_UID:$HOST_GID" python start.py\n\
else\n\
    exec python start.py\n\
fi\n' > entrypoint.sh

# Make the script executable
RUN chmod +x entrypoint.sh

# Env variables for CUDA / GPUs / HF (can be overriden by docker run)
ENV NVIDIA_VISIBLE_DEVICES=all
ENV PYTHONPATH="/:$PYTHONPATH"
ENV HF_HOME=/root/.cache/huggingface

# Expose the embedding server port
EXPOSE 6464

# Use the entrypoint script with absolute path
ENTRYPOINT ["/bertrend/services/embedding_server/entrypoint.sh"]
